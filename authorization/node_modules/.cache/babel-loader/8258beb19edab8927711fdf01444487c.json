{"ast":null,"code":"import _classCallCheck from \"/Users/marie/PhpstormProjects/musicmerge_react/authorization/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/marie/PhpstormProjects/musicmerge_react/authorization/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/marie/PhpstormProjects/musicmerge_react/authorization/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/marie/PhpstormProjects/musicmerge_react/authorization/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/marie/PhpstormProjects/musicmerge_react/authorization/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/marie/PhpstormProjects/musicmerge_react/authorization/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/marie/PhpstormProjects/musicmerge_react/authorization/src/Concerts.js\";\n////////////////////////////////////////\n//////// API ACCESS TO SONGKICK.COM\nimport React, { Component } from 'react';\n\nvar Concerts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Concerts, _Component);\n\n  function Concerts(props) {\n    var _this;\n\n    _classCallCheck(this, Concerts);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Concerts).call(this, props));\n    _this.state = {\n      upcomingConcerts: [],\n      artistId: \"\",\n      currentPos: []\n    };\n    _this.saveCurrentPosition = _this.saveCurrentPosition.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Concerts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getArtistId();\n    }\n  }, {\n    key: \"getLocation\",\n    value: function getLocation() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(this.saveCurrentPosition);\n      }\n    }\n  }, {\n    key: \"saveCurrentPosition\",\n    value: function saveCurrentPosition(position) {\n      var _this2 = this;\n\n      this.setState({\n        currentPos: {\n          \"lan\": position.coords.latitude.toFixed(2),\n          \"lng\": position.coords.longitude.toFixed(2)\n        }\n      });\n      setTimeout(function () {\n        _this2.calculateClosestEvents();\n      }, 400);\n    } ///get closest events\n\n  }, {\n    key: \"calculateClosestEvents\",\n    value: function calculateClosestEvents() {\n      var temp = [];\n\n      for (var i = 0; i < this.state.upcomingConcerts.length; i++) {\n        temp[i][\"lan\"] = this.state.upcomingConcerts.location.lat.toFixed(2);\n        temp[i][\"lng\"] = this.state.upcomingConcerts.location.lng.toFixed(2);\n      }\n\n      console.log(temp); // this.closest((this.state.upcomingConcerts.location.lat).toFixed(2), )\n    }\n  }, {\n    key: \"closest\",\n    value: function closest(num, arr) {\n      var curr = arr[0];\n      var diff = Math.abs(num - curr);\n\n      for (var val = 0; val < arr.length; val++) {\n        var newdiff = Math.abs(num - arr[val]);\n\n        if (newdiff < diff) {\n          diff = newdiff;\n          curr = arr[val];\n        }\n      }\n\n      return curr;\n    }\n  }, {\n    key: \"getUpcomingConcerts\",\n    value: function getUpcomingConcerts() {\n      var _this3 = this;\n\n      if (this.state.artistId) {\n        var temp = this.state.artistId;\n        fetch('https://api.songkick.com/api/3.0/artists/' + temp + '/calendar.json?apikey=4qVB9zk3XpWOwz8C').then(function (res) {\n          return res.json();\n        }) //response type\n        .then(function (data) {\n          _this3.setState({\n            upcomingConcerts: data.resultsPage.results.event\n          });\n        });\n      }\n\n      setTimeout(function () {\n        _this3.getLocation();\n      }, 500);\n    }\n  }, {\n    key: \"getArtistId\",\n    value: function getArtistId() {\n      var _this4 = this;\n\n      var artist = this.props.artist;\n      fetch('https://api.songkick.com/api/3.0/search/artists.json?apikey=4qVB9zk3XpWOwz8C&query=' + artist).then(function (res) {\n        return res.json();\n      }) //response type\n      .then(function (data) {\n        _this4.setState({\n          artistId: data.resultsPage.results.artist[0].id\n        });\n      });\n      setTimeout(function () {\n        _this4.getUpcomingConcerts();\n      }, 500);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, this.props.artist, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"latest requests:\"), console.log(this.state.upcomingConcerts), this.state.upcomingConcerts.map(function (item, i) {\n        return React.createElement(\"li\", {\n          key: i,\n          className: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, item.displayName), console.log(item), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, item.location.city));\n      })));\n    }\n  }]);\n\n  return Concerts;\n}(Component);\n\nexport default Concerts;","map":{"version":3,"sources":["/Users/marie/PhpstormProjects/musicmerge_react/authorization/src/Concerts.js"],"names":["React","Component","Concerts","props","state","upcomingConcerts","artistId","currentPos","saveCurrentPosition","bind","getArtistId","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","toFixed","longitude","setTimeout","calculateClosestEvents","temp","i","length","location","lat","lng","console","log","num","arr","curr","diff","Math","abs","val","newdiff","fetch","then","res","json","data","resultsPage","results","event","getLocation","artist","id","getUpcomingConcerts","map","item","displayName","city"],"mappings":"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","sourcesContent":["////////////////////////////////////////\n//////// API ACCESS TO SONGKICK.COM\n\n\nimport React, { Component } from 'react';\nclass Concerts extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            upcomingConcerts: [],\n            artistId: \"\",\n            currentPos: []\n        }\n        this.saveCurrentPosition = this.saveCurrentPosition.bind(this);\n\n    }\n    componentDidMount(){\n        this.getArtistId();\n    }\n\n\n    getLocation() {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(this.saveCurrentPosition);\n        }\n    }\n    saveCurrentPosition(position){\n\n        this.setState({currentPos: {\n            \"lan\": (position.coords.latitude).toFixed(2),\n            \"lng\": (position.coords.longitude).toFixed(2)\n        }})\n        setTimeout(() => {\n           this.calculateClosestEvents();\n        }, 400);\n    }\n///get closest events\n    calculateClosestEvents(){\n        let temp = [];\n        for(let i=0; i<this.state.upcomingConcerts.length; i++){\n            temp[i][\"lan\"] = (this.state.upcomingConcerts.location.lat).toFixed(2);\n            temp[i][\"lng\"] = (this.state.upcomingConcerts.location.lng).toFixed(2);\n        }\n        console.log(temp);\n        // this.closest((this.state.upcomingConcerts.location.lat).toFixed(2), )\n    }\n    closest (num, arr) {\n        var curr = arr[0];\n        var diff = Math.abs (num - curr);\n        for (var val = 0; val < arr.length; val++) {\n            var newdiff = Math.abs (num - arr[val]);\n            if (newdiff < diff) {\n                diff = newdiff;\n                curr = arr[val];\n            }\n        }\n        return curr;\n    }\n\n    getUpcomingConcerts(){\n        if(this.state.artistId){\n        let temp = this.state.artistId;\n        fetch('https://api.songkick.com/api/3.0/artists/'+temp+'/calendar.json?apikey=4qVB9zk3XpWOwz8C')\n            .then(res => res.json())//response type\n            .then((data) => {\n                this.setState({upcomingConcerts: data.resultsPage.results.event})\n            })\n        }\n        setTimeout(() => {\n            this.getLocation();\n        }, 500);\n    }\n\n    getArtistId(){\n        let artist = this.props.artist;\n        fetch('https://api.songkick.com/api/3.0/search/artists.json?apikey=4qVB9zk3XpWOwz8C&query='+artist)\n            .then(res => res.json())//response type\n            .then((data) => {\n                this.setState({artistId: data.resultsPage.results.artist[0].id})\n            })\n        setTimeout(() => {\n            this.getUpcomingConcerts();\n        }, 500);\n    }\n    render () {\n        return <div>{this.props.artist}\n\n\n            <div>\n                <h3>latest requests:</h3>\n                {console.log(this.state.upcomingConcerts)}\n                {this.state.upcomingConcerts.map((item, i) => <li key={i} className=\"\">\n                    <span>{item.displayName}</span>{console.log(item)}\n                    <span>{item.location.city}</span>\n                </li>)}\n            </div>\n\n\n        </div>\n    }\n}\n\nexport default Concerts;\n"]},"metadata":{},"sourceType":"module"}