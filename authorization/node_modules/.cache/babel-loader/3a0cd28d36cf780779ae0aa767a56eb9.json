{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Raphael\\\\Documents\\\\GitHub\\\\re.hymn\\\\authorization\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Raphael\\\\Documents\\\\GitHub\\\\re.hymn\\\\authorization\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Raphael\\\\Documents\\\\GitHub\\\\re.hymn\\\\authorization\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Raphael\\\\Documents\\\\GitHub\\\\re.hymn\\\\authorization\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Raphael\\\\Documents\\\\GitHub\\\\re.hymn\\\\authorization\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Raphael\\\\Documents\\\\GitHub\\\\re.hymn\\\\authorization\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Concerts from './Concerts.js';\nimport './App.css';\nimport logo from './images/Rehymn.png';\nimport Spotify from 'spotify-web-api-js';\nvar spotifyWebApi = new Spotify();\nvar tempHistory = [];\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this._handleKeyPress = function (e) {\n      if (e.key === 'Enter') {\n        setTimeout(function () {\n          _this.searchArtist();\n        }, 100);\n      }\n    };\n\n    var params = _this.getHashParams();\n\n    var token = params.access_token;\n\n    if (token) {\n      spotifyWebApi.setAccessToken(token);\n    }\n\n    _this.state = {\n      favArtists: [],\n      initialLoading: true,\n      inputValue: \"\",\n      foundArtists: [],\n      foundArtistsLi: [],\n      favArtistsLi: [],\n      error: false,\n      errorReport: \"\",\n      searchrequest: false,\n      executingOnce: true,\n      showSearchResults: false,\n      showConcerts: false,\n      artistForUpcoming: \"\",\n      latestRequests: []\n    };\n    return _this;\n  } ////////////////////////////////////////////\n  //// GET complete search history  (Todo: add restrictions if needed)\n\n\n  _createClass(App, [{\n    key: \"fetchHistory\",\n    value: function fetchHistory() {\n      var _this2 = this;\n\n      fetch('/concertfinder/').then(function (res) {\n        return res.json();\n      }) //response type\n      .then(function (data) {\n        tempHistory = data;\n      });\n      setTimeout(function () {\n        _this2.mapHistory();\n      }, 200);\n    }\n  }, {\n    key: \"mapHistory\",\n    value: function mapHistory() {\n      this.setState({\n        latestRequests: tempHistory.slice(tempHistory.length - 7, tempHistory.length)\n      });\n    } ////////////////////////////////////////////\n    //// POST the search request to the database\n\n  }, {\n    key: \"saveRequest\",\n    value: function saveRequest() {\n      fetch('/concertfinder/', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"name\": this.state.inputValue\n        }) //this.state.inputValue\n\n      }).then(function (response) {\n        console.log(response);\n      }); // setTimeout(() => {\n      //     this.fetchHistory();\n      // }, 200);\n    } ////////////////////////////////////////////\n    //// UPDATES input value for search request\n\n  }, {\n    key: \"updateInputValue\",\n    value: function updateInputValue(evt) {\n      this.setState({\n        inputValue: evt.target.value\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.state.favArtists[0].length > 0 && this.state.initialLoading) {\n        this.printFavArtists();\n      }\n\n      if (this.state.searchrequest) {\n        if (this.state.foundArtists[0].length > 0 && this.state.executingOnce) {\n          this.printSearchedArtists();\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      this.getFavArtists();\n      setTimeout(function () {\n        _this3.fetchHistory();\n      }, 200);\n    } ////////////////////////////////////////////\n    //// -\n\n  }, {\n    key: \"toggleConcertPage\",\n    value: function toggleConcertPage(name) {\n      this.setState({\n        showConcerts: true,\n        artistForUpcoming: name\n      });\n    } ////////////////////////////////////////////\n    //// SAVES fetched data from search to an array that will be mapped to the html\n\n  }, {\n    key: \"printSearchedArtists\",\n    value: function printSearchedArtists(err) {\n      var _this4 = this;\n\n      var temp = [];\n\n      for (var i = 0; i < this.state.foundArtists[0].length; i++) {\n        temp = this.state.foundArtists[0];\n      }\n\n      this.setState({\n        foundArtistsLi: temp,\n        searchrequest: false,\n        executingOnce: false\n      });\n      setTimeout(function () {\n        _this4.setState({\n          showSearchResults: true\n        });\n      }, 1200);\n    }\n  }, {\n    key: \"printFavArtists\",\n    value: function printFavArtists() {\n      var temp = [];\n\n      for (var i = 0; i < 19; i++) {\n        temp = this.state.favArtists[0];\n      }\n\n      this.setState({\n        favArtistsLi: temp,\n        initialLoading: false\n      });\n    } ////////////////////////////////////////////////////////////////////////\n    //get the data from the spotify api\n\n  }, {\n    key: \"getFavArtists\",\n    value: function getFavArtists() {\n      var _this5 = this;\n\n      spotifyWebApi.getMyTopArtists().then(function (response) {\n        _this5.setState(function (prevState) {\n          return {\n            favArtists: [response.items]\n          };\n        });\n      });\n    }\n  }, {\n    key: \"searchArtist\",\n    value: function searchArtist() {\n      var _this6 = this;\n\n      spotifyWebApi.searchArtists(this.state.inputValue).then(function (response) {\n        _this6.setState(function (prevState) {\n          return {\n            foundArtists: [response.artists.items]\n          };\n        });\n      }, function (err) {\n        this.setState({\n          error: true\n        });\n      });\n      setTimeout(function () {\n        _this6.setState({\n          searchrequest: true,\n          executingOnce: true\n        });\n\n        if (_this6.state.foundArtists[0].length <= 1) {\n          _this6.setState({\n            error: true\n          });\n        }\n      }, 100);\n      setTimeout(function () {\n        _this6.saveRequest();\n      }, 200);\n    } ////////////////////////////////////////////////////////////////////////\n    //get hash for access (see app.js in main root)\n\n  }, {\n    key: \"getHashParams\",\n    value: function getHashParams() {\n      var hashParams = {};\n      var e,\n          r = /([^&;=]+)=?([^&;]*)/g,\n          q = window.location.hash.substring(1);\n      e = r.exec(q);\n\n      while (e) {\n        hashParams[e[1]] = decodeURIComponent(e[2]);\n        e = r.exec(q);\n      }\n\n      return hashParams;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"http://localhost:8888\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"loginButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Login with Spotify\"))), React.createElement(\"img\", {\n        className: \"App-logo\",\n        alt: \"Rehymn\",\n        src: logo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), !this.state.showConcerts && //latest Requests\n      React.createElement(\"div\", {\n        id: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, this.state.latestRequests[0] && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"latest requests:\"), React.createElement(\"div\", {\n        className: \"recent-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, this.state.latestRequests.map(function (item, i) {\n        return React.createElement(\"li\", {\n          key: i,\n          onClick: function onClick() {\n            return _this7.toggleConcertPage(item.name);\n          },\n          className: \"searchPerClick\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"items-h\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, item.name));\n      }))), React.createElement(\"div\", {\n        className: \"bar-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: this.state.inputValue,\n        onChange: function onChange(evt) {\n          return _this7.updateInputValue(evt);\n        },\n        onKeyPress: this._handleKeyPress,\n        placeholder: \"Search for any Artist...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"searchbutton\",\n        onClick: function onClick() {\n          return _this7.searchArtist();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Search!\")), this.state.error && React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"unfortunately there are no artists or groups listed under this name!\"), React.createElement(\"div\", {\n        className: \"fav-items-now\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, this.state.showSearchResults && this.state.foundArtistsLi.map(function (item, i) {\n        return React.createElement(\"li\", {\n          key: i,\n          onClick: function onClick() {\n            return _this7.toggleConcertPage(item.name);\n          },\n          className: \"searchPerClick\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"search-photo\",\n          alt: item.name,\n          src: item.images[2] ? item.images[2].url : \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          className: \"search-photo-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, item.name));\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"favorite artists:\"), React.createElement(\"div\", {\n        className: \"fav-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"figure\", {\n        className: \"fav-items\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, this.state.favArtistsLi.map(function (item, i) {\n        return React.createElement(\"li\", {\n          key: i,\n          onClick: function onClick() {\n            return _this7.toggleConcertPage(item.name);\n          },\n          className: \"searchPerClick\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"photo\",\n          alt: item.name,\n          src: item.images[2] ? item.images[2].url : \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }), React.createElement(\"figcaption\", {\n          className: \"fav-button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, item.name));\n      })))), this.state.showConcerts && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this7.goBack();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"back\"), React.createElement(Concerts, {\n        artist: this.state.artistForUpcoming,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Raphael\\Documents\\GitHub\\re.hymn\\authorization\\src\\App.js"],"names":["React","Component","Concerts","logo","Spotify","spotifyWebApi","tempHistory","App","_handleKeyPress","e","key","setTimeout","searchArtist","params","getHashParams","token","access_token","setAccessToken","state","favArtists","initialLoading","inputValue","foundArtists","foundArtistsLi","favArtistsLi","error","errorReport","searchrequest","executingOnce","showSearchResults","showConcerts","artistForUpcoming","latestRequests","fetch","then","res","json","data","mapHistory","setState","slice","length","method","headers","body","JSON","stringify","response","console","log","evt","target","value","printFavArtists","printSearchedArtists","getFavArtists","fetchHistory","name","err","temp","i","getMyTopArtists","prevState","items","searchArtists","artists","saveRequest","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","map","item","toggleConcertPage","updateInputValue","images","url","goBack"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport  Concerts  from './Concerts.js';\r\nimport './App.css';\r\nimport logo from './images/Rehymn.png';\r\nimport Spotify from 'spotify-web-api-js';\r\nconst spotifyWebApi = new Spotify();\r\nvar tempHistory = [];\r\n\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super();\r\n        const params = this.getHashParams();\r\n\r\n        const token = params.access_token;\r\n        if (token) {\r\n            spotifyWebApi.setAccessToken(token);\r\n        }\r\n        this.state = {\r\n         favArtists: [],\r\n         initialLoading: true,\r\n         inputValue: \"\",\r\n         foundArtists: [],\r\n         foundArtistsLi: [],\r\n         favArtistsLi: [],\r\n         error: false,\r\n         errorReport: \"\",\r\n         searchrequest: false,\r\n         executingOnce: true,\r\n         showSearchResults: false,\r\n         showConcerts: false,\r\n         artistForUpcoming: \"\",\r\n         latestRequests:  []\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n////////////////////////////////////////////\r\n//// GET complete search history  (Todo: add restrictions if needed)\r\nfetchHistory(){\r\n    fetch('/concertfinder/')\r\n        .then(res => res.json())//response type\r\n        .then((data) => {\r\n            tempHistory = data;\r\n        })\r\n        setTimeout(() => {\r\n            this.mapHistory();\r\n        }, 200);\r\n}\r\nmapHistory(){\r\n    this.setState({latestRequests: tempHistory.slice(tempHistory.length-7, tempHistory.length)});\r\n}\r\n\r\n\r\n////////////////////////////////////////////\r\n//// POST the search request to the database\r\nsaveRequest(){\r\n   fetch('/concertfinder/', {\r\n       method:'POST',\r\n       headers: {\r\n           'Accept': 'application/json',\r\n           'Content-Type': 'application/json'\r\n       },\r\n       body: JSON.stringify({\r\n           \"name\": this.state.inputValue\r\n       }),\r\n    //this.state.inputValue\r\n   }).then(response => {\r\n       console.log(response);\r\n   });\r\n    // setTimeout(() => {\r\n    //     this.fetchHistory();\r\n    // }, 200);\r\n}\r\n\r\n\r\n////////////////////////////////////////////\r\n//// UPDATES input value for search request\r\nupdateInputValue(evt) {\r\n        this.setState({\r\n            inputValue: evt.target.value\r\n        });\r\n}\r\n\r\ncomponentDidUpdate(){\r\n    if(this.state.favArtists[0].length > 0 && this.state.initialLoading){\r\n        this.printFavArtists();\r\n    }\r\n    if(this.state.searchrequest){\r\n    if(this.state.foundArtists[0].length > 0 &&this.state.executingOnce) {\r\n        this.printSearchedArtists();\r\n    }\r\n    }\r\n}\r\n\r\ncomponentDidMount(){\r\n    this.getFavArtists();\r\n    setTimeout(() => {this.fetchHistory();}, 200)\r\n\r\n\r\n}\r\n\r\n////////////////////////////////////////////\r\n//// -\r\ntoggleConcertPage(name){\r\n    this.setState({showConcerts: true, artistForUpcoming: name});\r\n}\r\n////////////////////////////////////////////\r\n//// SAVES fetched data from search to an array that will be mapped to the html\r\nprintSearchedArtists(err){\r\n    let temp = [];\r\n    for(let i=0; i<this.state.foundArtists[0].length; i++){\r\n        temp =this.state.foundArtists[0];\r\n    }\r\n    this.setState({foundArtistsLi: temp, searchrequest: false, executingOnce: false});\r\n    setTimeout(() => {this.setState({showSearchResults: true});}, 1200)\r\n}\r\nprintFavArtists(){\r\n    let temp = []\r\n    for(let i=0; i<19; i++) {\r\n         temp = this.state.favArtists[0];\r\n    }\r\n    this.setState({favArtistsLi: temp, initialLoading: false});\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////\r\n//get the data from the spotify api\r\ngetFavArtists(){\r\n    spotifyWebApi.getMyTopArtists()\r\n.then((response) => {\r\n    this.setState(prevState => ({\r\n        favArtists:[response.items],\r\n}));\r\n})\r\n}\r\n\r\n\r\nsearchArtist(){\r\n    spotifyWebApi.searchArtists(this.state.inputValue)\r\n        .then((response) => {\r\n            this.setState(prevState => ({\r\n                foundArtists: [response.artists.items],\r\n            }));\r\n        }, function(err) {\r\n            this.setState({error: true});\r\n        });\r\n\r\n    setTimeout(() => {\r\n        this.setState({searchrequest: true, executingOnce:true});\r\n        if(this.state.foundArtists[0].length <=1){ this.setState({error: true});}\r\n    }, 100);\r\n    setTimeout(() => {\r\n        this.saveRequest();\r\n    }, 200);\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////\r\n//get hash for access (see app.js in main root)\r\ngetHashParams() {\r\n            var hashParams = {};\r\n            var e, r = /([^&;=]+)=?([^&;]*)/g,\r\n                q = window.location.hash.substring(1);\r\n            e = r.exec(q)\r\n            while (e) {\r\n                hashParams[e[1]] = decodeURIComponent(e[2]);\r\n                e = r.exec(q);\r\n            }\r\n            return hashParams;\r\n        }\r\n_handleKeyPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            setTimeout(() => {\r\n                this.searchArtist();\r\n            }, 100);\r\n\r\n        }\r\n}\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n              <a href=\"http://localhost:8888\">\r\n                 <button id='loginButton'><p className={\"text-login\"}>Login with Spotify</p></button>\r\n              </a>\r\n\r\n  <img className='App-logo' alt='Rehymn' src={logo}/>\r\n\r\n          {!this.state.showConcerts && //latest Requests\r\n          <div id=\"main\" >\r\n          {this.state.latestRequests[0] &&\r\n          <div>\r\n          <h3>latest requests:</h3>\r\n          <div className=\"recent-container\">\r\n            {this.state.latestRequests.map((item, i) => <li  key={i} onClick={() => this.toggleConcertPage(item.name)}className=\"searchPerClick\">\r\n            <button className=\"items-h\">{item.name}</button>\r\n            </li>)}\r\n             </div>\r\n           </div>\r\n          }\r\n\r\n              {/*SEARCH for an artist or group*/}\r\n              <div className=\"bar-search\">\r\n              <input value={this.state.inputValue} onChange={evt => this.updateInputValue(evt)} onKeyPress={this._handleKeyPress} placeholder=\"Search for any Artist...\"/>\r\n              <button className=\"searchbutton\" onClick={() => this.searchArtist()}>Search!</button>\r\n              </div>\r\n\r\n\r\n              {this.state.error &&\r\n                  <h2>unfortunately there are no artists or groups listed under this name!</h2>\r\n              }\r\n              {/* MAP THE SEARCH RESULTS ON TOP OF THE LIST*/}\r\n\r\n        <div className=\"fav-items-now\">\r\n              {this.state.showSearchResults &&\r\n              this.state.foundArtistsLi.map((item, i) => <li key={i} onClick={() => this.toggleConcertPage(item.name)}className=\"searchPerClick\"><img className=\"search-photo\"\r\n                  alt={item.name} src={item.images[2] ? item.images[2].url : \"\"}/>\r\n                  <button className=\"search-photo-item\">{item.name}</button>\r\n              </li>)\r\n              }\r\n        </div>\r\n\r\n\r\n\r\n              <br/>\r\n              <h3>favorite artists:</h3>\r\n          <div className=\"fav-container\">\r\n                 <figure className=\"fav-items\">\r\n              {this.state.favArtistsLi.map((item, i) => <li key={i} onClick={() => this.toggleConcertPage(item.name)}className=\"searchPerClick\"><img className=\"photo\"\r\n                  alt={item.name} src={item.images[2] ? item.images[2].url : \"\"}/>\r\n                  <figcaption className=\"fav-button\" >{item.name}</figcaption>\r\n              </li>)}\r\n                </figure>\r\n        </div>\r\n          </div>\r\n        }\r\n\r\n          {this.state.showConcerts &&\r\n        \r\n            <div>\r\n            <a onClick={()=> this.goBack()}>back</a>\r\n          <Concerts artist={this.state.artistForUpcoming}></Concerts>\r\n          </div>\r\n          }\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}