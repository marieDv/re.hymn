{"ast":null,"code":"import _classCallCheck from \"/Users/marie/PhpstormProjects/musicmerge_react/authorization/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/marie/PhpstormProjects/musicmerge_react/authorization/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/marie/PhpstormProjects/musicmerge_react/authorization/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/marie/PhpstormProjects/musicmerge_react/authorization/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/marie/PhpstormProjects/musicmerge_react/authorization/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/marie/PhpstormProjects/musicmerge_react/authorization/src/App.js\";\nimport React, { Component } from 'react';\nimport Concerts from './Concerts.js';\nimport './App.css';\nimport Spotify from 'spotify-web-api-js';\nvar spotifyWebApi = new Spotify();\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.fetchData = function () {\n      var tempData = [];\n      fetch('/concertfinder/').then(function (res) {\n        return res.json();\n      }) //response type\n      .then(function (data) {\n        // this.setState(prevState => ({\n        //     latestRequests: data\n        // }));\n        tempData = data;\n        console.log(tempData[0]);\n      });\n    };\n\n    _this._handleKeyPress = function (e) {\n      if (e.key === 'Enter') {\n        setTimeout(function () {\n          _this.searchArtist();\n        }, 100);\n      }\n    };\n\n    var params = _this.getHashParams();\n\n    var token = params.access_token;\n\n    if (token) {\n      spotifyWebApi.setAccessToken(token);\n    }\n\n    _this.state = {\n      favArtists: [],\n      initialLoading: true,\n      inputValue: \"\",\n      foundArtists: [],\n      foundArtistsLi: [],\n      favArtistsLi: [],\n      error: false,\n      errorReport: \"\",\n      searchrequest: false,\n      executingOnce: true,\n      showSearchResults: false,\n      showConcerts: false,\n      artistForUpcoming: \"\",\n      latestRequests: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"updateInputValue\",\n    ////////////////////////////////////////////\n    //// UPDATES input value for search request\n    value: function updateInputValue(evt) {\n      this.setState({\n        inputValue: evt.target.value\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.state.favArtists[0].length > 0 && this.state.initialLoading) {\n        this.printFavArtists();\n      }\n\n      if (this.state.searchrequest) {\n        if (this.state.foundArtists[0].length > 0 && this.state.executingOnce) {\n          this.printSearchedArtists();\n        }\n      }\n\n      this.fetchData();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getFavArtists();\n    } ////////////////////////////////////////////\n    //// -\n\n  }, {\n    key: \"toggleConcertPage\",\n    value: function toggleConcertPage(name) {\n      this.setState({\n        showConcerts: true,\n        artistForUpcoming: name\n      });\n    } ////////////////////////////////////////////\n    //// SAVES fetched data from search to an array that will be mapped to the html\n\n  }, {\n    key: \"printSearchedArtists\",\n    value: function printSearchedArtists(err) {\n      var _this2 = this;\n\n      var temp = [];\n\n      for (var i = 0; i < this.state.foundArtists[0].length; i++) {\n        temp = this.state.foundArtists[0];\n      }\n\n      this.setState({\n        foundArtistsLi: temp,\n        searchrequest: false,\n        executingOnce: false\n      });\n      setTimeout(function () {\n        _this2.setState({\n          showSearchResults: true\n        });\n      }, 1200);\n    }\n  }, {\n    key: \"printFavArtists\",\n    value: function printFavArtists() {\n      var temp = [];\n\n      for (var i = 0; i < 19; i++) {\n        temp = this.state.favArtists[0];\n      }\n\n      this.setState({\n        favArtistsLi: temp,\n        initialLoading: false\n      });\n    } ////////////////////////////////////////////////////////////////////////\n    //get the data from the spotify api\n\n  }, {\n    key: \"getFavArtists\",\n    value: function getFavArtists() {\n      var _this3 = this;\n\n      spotifyWebApi.getMyTopArtists().then(function (response) {\n        _this3.setState(function (prevState) {\n          return {\n            favArtists: [response.items]\n          };\n        });\n      });\n    }\n  }, {\n    key: \"searchArtist\",\n    value: function searchArtist() {\n      var _this4 = this;\n\n      spotifyWebApi.searchArtists(this.state.inputValue).then(function (response) {\n        _this4.setState(function (prevState) {\n          return {\n            foundArtists: [response.artists.items]\n          };\n        });\n      }, function (err) {\n        this.setState({\n          error: true\n        });\n      });\n      setTimeout(function () {\n        _this4.setState({\n          searchrequest: true,\n          executingOnce: true\n        });\n\n        if (_this4.state.foundArtists[0].length <= 1) {\n          _this4.setState({\n            error: true\n          });\n        }\n      }, 100);\n    } ////////////////////////////////////////////////////////////////////////\n    //get hash for access (see app.js in main root)\n\n  }, {\n    key: \"getHashParams\",\n    value: function getHashParams() {\n      var hashParams = {};\n      var e,\n          r = /([^&;=]+)=?([^&;]*)/g,\n          q = window.location.hash.substring(1);\n      e = r.exec(q);\n\n      while (e) {\n        hashParams[e[1]] = decodeURIComponent(e[2]);\n        e = r.exec(q);\n      }\n\n      return hashParams;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"http://localhost:8888\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Login with Spotify\"))), !this.state.showConcerts && React.createElement(\"div\", {\n        id: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: this.state.inputValue,\n        onChange: function onChange(evt) {\n          return _this5.updateInputValue(evt);\n        },\n        onKeyPress: this._handleKeyPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this5.searchArtist();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"start!\"), this.state.error && React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"unfortunately there are no artists or groups listed under this name!\"), this.state.showSearchResults && this.state.foundArtistsLi.map(function (item, i) {\n        return React.createElement(\"li\", {\n          key: i,\n          onClick: function onClick() {\n            return _this5.toggleConcertPage(item.name);\n          },\n          className: \"searchPerClick\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          alt: item.name,\n          src: item.images[2] ? item.images[2].url : \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, item.name));\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), this.state.favArtistsLi.map(function (item, i) {\n        return React.createElement(\"li\", {\n          key: i,\n          onClick: function onClick() {\n            return _this5.toggleConcertPage(item.name);\n          },\n          className: \"searchPerClick\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          alt: item.name,\n          src: item.images[2] ? item.images[2].url : \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, item.name));\n      })), this.state.showConcerts && React.createElement(Concerts, {\n        artist: this.state.artistForUpcoming,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/marie/PhpstormProjects/musicmerge_react/authorization/src/App.js"],"names":["React","Component","Concerts","Spotify","spotifyWebApi","App","fetchData","tempData","fetch","then","res","json","data","console","log","_handleKeyPress","e","key","setTimeout","searchArtist","params","getHashParams","token","access_token","setAccessToken","state","favArtists","initialLoading","inputValue","foundArtists","foundArtistsLi","favArtistsLi","error","errorReport","searchrequest","executingOnce","showSearchResults","showConcerts","artistForUpcoming","latestRequests","evt","setState","target","value","length","printFavArtists","printSearchedArtists","getFavArtists","name","err","temp","i","getMyTopArtists","response","prevState","items","searchArtists","artists","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","updateInputValue","map","item","toggleConcertPage","images","url"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport  Concerts  from './Concerts.js';\nimport './App.css';\nimport Spotify from 'spotify-web-api-js';\nconst spotifyWebApi = new Spotify();\n\n\n\n\nclass App extends Component {\n    constructor(){\n        super();\n        const params = this.getHashParams();\n\n        const token = params.access_token;\n        if (token) {\n            spotifyWebApi.setAccessToken(token);\n        }\n        this.state = {\n         favArtists: [],\n         initialLoading: true,\n         inputValue: \"\",\n         foundArtists: [],\n         foundArtistsLi: [],\n         favArtistsLi: [],\n         error: false,\n         errorReport: \"\",\n         searchrequest: false,\n         executingOnce: true,\n         showSearchResults: false,\n         showConcerts: false,\n         artistForUpcoming: \"\",\n         latestRequests:  []\n\n        }\n\n\n    }\n\nfetchData = () => {\n        var tempData = [];\n    fetch('/concertfinder/')\n        .then(res => res.json())//response type\n        .then((data) => {\n            // this.setState(prevState => ({\n            //     latestRequests: data\n            // }));\n            tempData = data;\n            console.log(tempData[0]);\n        });\n\n}\n////////////////////////////////////////////\n//// UPDATES input value for search request\nupdateInputValue(evt) {\n        this.setState({\n            inputValue: evt.target.value\n        });\n}\n\ncomponentDidUpdate(){\n    if(this.state.favArtists[0].length > 0 && this.state.initialLoading){\n        this.printFavArtists();\n    }\n    if(this.state.searchrequest){\n    if(this.state.foundArtists[0].length > 0 &&this.state.executingOnce) {\n        this.printSearchedArtists();\n    }\n    }\n    this.fetchData();\n}\n\ncomponentDidMount(){\n    this.getFavArtists();\n}\n\n////////////////////////////////////////////\n//// -\ntoggleConcertPage(name){\n    this.setState({showConcerts: true, artistForUpcoming: name});\n}\n////////////////////////////////////////////\n//// SAVES fetched data from search to an array that will be mapped to the html\nprintSearchedArtists(err){\n    let temp = [];\n    for(let i=0; i<this.state.foundArtists[0].length; i++){\n        temp =this.state.foundArtists[0];\n    }\n    this.setState({foundArtistsLi: temp, searchrequest: false, executingOnce: false});\n    setTimeout(() => {this.setState({showSearchResults: true});}, 1200)\n}\nprintFavArtists(){\n    let temp = []\n    for(let i=0; i<19; i++) {\n         temp = this.state.favArtists[0];\n    }\n    this.setState({favArtistsLi: temp, initialLoading: false});\n}\n\n////////////////////////////////////////////////////////////////////////\n//get the data from the spotify api\ngetFavArtists(){\n    spotifyWebApi.getMyTopArtists()\n.then((response) => {\n    this.setState(prevState => ({\n        favArtists:[response.items],\n}));\n})\n}\nsearchArtist(){\n    spotifyWebApi.searchArtists(this.state.inputValue)\n        .then((response) => {\n            this.setState(prevState => ({\n                foundArtists: [response.artists.items],\n            }));\n        }, function(err) {\n            this.setState({error: true});\n        });\n\n    setTimeout(() => {\n        this.setState({searchrequest: true, executingOnce:true});\n        if(this.state.foundArtists[0].length <=1){ this.setState({error: true});}\n    }, 100);\n}\n\n////////////////////////////////////////////////////////////////////////\n//get hash for access (see app.js in main root)\ngetHashParams() {\n            var hashParams = {};\n            var e, r = /([^&;=]+)=?([^&;]*)/g,\n                q = window.location.hash.substring(1);\n            e = r.exec(q)\n            while (e) {\n                hashParams[e[1]] = decodeURIComponent(e[2]);\n                e = r.exec(q);\n            }\n            return hashParams;\n        }\n_handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            setTimeout(() => {\n                this.searchArtist();\n            }, 100);\n\n        }\n}\n  render() {\n    return (\n      <div className=\"App\">\n\n              <a href=\"http://localhost:8888\">\n                 <button><p className={\"text-login\"}>Login with Spotify</p></button>\n              </a>\n\n          {!this.state.showConcerts &&\n          <div id=\"main\">\n              {/*SEARCH for an artist or group*/}\n              <input value={this.state.inputValue} onChange={evt => this.updateInputValue(evt)} onKeyPress={this._handleKeyPress}/>\n              <button onClick={() => this.searchArtist()}>start!</button>\n\n\n\n              {this.state.error &&\n                  <h2>unfortunately there are no artists or groups listed under this name!</h2>\n              }\n              {/* MAP THE SEARCH RESULTS ON TOP OF THE LIST*/}\n              {this.state.showSearchResults &&\n              this.state.foundArtistsLi.map((item, i) => <li key={i} onClick={() => this.toggleConcertPage(item.name)}className=\"searchPerClick\"><img\n                  alt={item.name} src={item.images[2] ? item.images[2].url : \"\"}/>\n                  <button>{item.name}</button>\n              </li>)\n              }\n              <br/>\n              {this.state.favArtistsLi.map((item, i) => <li key={i} onClick={() => this.toggleConcertPage(item.name)}className=\"searchPerClick\"><img\n                  alt={item.name} src={item.images[2] ? item.images[2].url : \"\"}/>\n                  <button>{item.name}</button>\n              </li>)}\n          </div>\n          }\n          {this.state.showConcerts &&\n          <Concerts artist={this.state.artistForUpcoming}></Concerts>\n          }\n\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}