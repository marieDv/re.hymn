{"ast":null,"code":"'use strict';\n\nvar ReadPreference = require('../topologies/read_preference'),\n    MongoError = require('../error').MongoError;\n\nvar MESSAGE_HEADER_SIZE = 16; // OPCODE Numbers\n// Defined at https://docs.mongodb.com/manual/reference/mongodb-wire-protocol/#request-opcodes\n\nvar opcodes = {\n  OP_REPLY: 1,\n  OP_UPDATE: 2001,\n  OP_INSERT: 2002,\n  OP_QUERY: 2004,\n  OP_GETMORE: 2005,\n  OP_DELETE: 2006,\n  OP_KILL_CURSORS: 2007,\n  OP_COMPRESSED: 2012\n};\n\nvar getReadPreference = function getReadPreference(cmd, options) {\n  // Default to command version of the readPreference\n  var readPreference = cmd.readPreference || new ReadPreference('primary'); // If we have an option readPreference override the command one\n\n  if (options.readPreference) {\n    readPreference = options.readPreference;\n  }\n\n  if (typeof readPreference === 'string') {\n    readPreference = new ReadPreference(readPreference);\n  }\n\n  if (!(readPreference instanceof ReadPreference)) {\n    throw new MongoError('read preference must be a ReadPreference instance');\n  }\n\n  return readPreference;\n}; // Parses the header of a wire protocol message\n\n\nvar parseHeader = function parseHeader(message) {\n  return {\n    length: message.readInt32LE(0),\n    requestId: message.readInt32LE(4),\n    responseTo: message.readInt32LE(8),\n    opCode: message.readInt32LE(12)\n  };\n};\n\nmodule.exports = {\n  getReadPreference: getReadPreference,\n  MESSAGE_HEADER_SIZE: MESSAGE_HEADER_SIZE,\n  opcodes: opcodes,\n  parseHeader: parseHeader\n};","map":null,"metadata":{},"sourceType":"script"}